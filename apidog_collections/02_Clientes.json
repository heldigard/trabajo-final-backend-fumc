{
  "info": {
    "name": "API FUMC - Clientes",
    "description": "Colecci√≥n de endpoints para gestionar clientes de la tienda virtual.\n\nüë• ENDPOINTS INCLUIDOS:\n- POST /clientes/ - Crear cliente\n- GET /clientes/ - Listar clientes (con filtros)\n- GET /clientes/{id} - Obtener cliente por ID\n- PUT /clientes/{id} - Actualizar cliente\n- DELETE /clientes/{id} - Eliminar cliente (l√≥gico)\n- GET /clientes/buscar/email - Buscar por email\n- GET /clientes/buscar/nombre - Buscar por nombre\n- GET /clientes/ciudad/{ciudad} - Filtrar por ciudad",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1Ô∏è‚É£ Crear Cliente",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"nombre\": \"Mar√≠a Fernanda Gonz√°lez\",\n  \"email\": \"maria.gonzalez@email.com\",\n  \"telefono\": \"+57 300 123 4567\",\n  \"direccion\": \"Carrera 50 #45-30, Laureles\",\n  \"ciudad\": \"Medell√≠n\",\n  \"documento\": \"1234567890\"\n}"
        },
        "url": {
          "raw": "http://localhost:8000/clientes/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["clientes", ""]
        },
        "description": "**Crea un nuevo cliente en la base de datos.**\n\nüìù Campos:\n- `nombre` (obligatorio): Nombre completo\n- `email` (obligatorio): Email √öNICO (no puede repetirse)\n- `telefono` (opcional): Tel√©fono\n- `direccion` (opcional): Direcci√≥n\n- `ciudad` (opcional): Ciudad\n- `documento` (opcional): Documento √öNICO\n\n‚ö†Ô∏è IMPORTANTE:\n- El email debe ser v√°lido (formato: usuario@dominio.com)\n- No puede haber dos clientes con el mismo email\n- No puede haber dos clientes con el mismo documento\n\n‚úÖ Respuesta exitosa: HTTP 201 con el cliente creado\n‚ùå Errores comunes:\n- 400: Email o documento duplicado\n- 422: Email inv√°lido"
      },
      "response": []
    },
    {
      "name": "2Ô∏è‚É£ Listar Clientes (Todos)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/clientes/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["clientes", ""]
        },
        "description": "**Lista TODOS los clientes activos.**\n\nüîç Sin filtros, devuelve todos los clientes donde `activo = true`.\n\n‚úÖ Respuesta: Array de clientes"
      },
      "response": []
    },
    {
      "name": "3Ô∏è‚É£ Listar Clientes (Con Filtros)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/clientes/?ciudad=Medell√≠n&activo=true&skip=0&limit=10",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["clientes", ""],
          "query": [
            {
              "key": "ciudad",
              "value": "Medell√≠n",
              "description": "Filtrar por ciudad"
            },
            {
              "key": "activo",
              "value": "true",
              "description": "Mostrar solo activos (true) o inactivos (false)"
            },
            {
              "key": "skip",
              "value": "0",
              "description": "Saltar N clientes (para paginaci√≥n)"
            },
            {
              "key": "limit",
              "value": "10",
              "description": "M√°ximo de clientes a devolver"
            }
          ]
        },
        "description": "**Lista clientes con filtros opcionales.**\n\nüîç Query Params:\n- `ciudad`: Filtrar por ciudad exacta\n- `activo`: true o false\n- `skip`: Paginaci√≥n (saltar N)\n- `limit`: M√°ximo de resultados (default: 100)\n\n‚úÖ Respuesta: Array de clientes filtrados"
      },
      "response": []
    },
    {
      "name": "4Ô∏è‚É£ Obtener Cliente por ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/clientes/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["clientes", "1"]
        },
        "description": "**Obtiene UN cliente por su ID.**\n\nüî¢ Cambia el `1` en la URL por el ID del cliente que quieres consultar.\n\n‚úÖ Respuesta exitosa: HTTP 200 con el cliente\n‚ùå Errores:\n- 404: Cliente no encontrado"
      },
      "response": []
    },
    {
      "name": "5Ô∏è‚É£ Buscar Cliente por Email",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/clientes/buscar/email?email=maria.gonzalez@email.com",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["clientes", "buscar", "email"],
          "query": [
            {
              "key": "email",
              "value": "maria.gonzalez@email.com",
              "description": "Email exacto del cliente"
            }
          ]
        },
        "description": "**Busca un cliente por email (b√∫squeda exacta).**\n\nüìß Debe coincidir exactamente con el email registrado.\n\n‚úÖ Respuesta exitosa: HTTP 200 con el cliente\n‚ùå Errores:\n- 404: Cliente no encontrado con ese email"
      },
      "response": []
    },
    {
      "name": "6Ô∏è‚É£ Buscar Clientes por Nombre",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/clientes/buscar/nombre?q=maria",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["clientes", "buscar", "nombre"],
          "query": [
            {
              "key": "q",
              "value": "maria",
              "description": "T√©rmino de b√∫squeda (case-insensitive)"
            }
          ]
        },
        "description": "**Busca clientes por nombre (b√∫squeda parcial).**\n\nüîé Ejemplo: `q=maria` encuentra:\n- \"Mar√≠a Gonz√°lez\"\n- \"Ana Mar√≠a L√≥pez\"\n- \"Maria Fernanda\"\n\n‚úÖ La b√∫squeda NO es case-sensitive (MARIA = maria)\n‚úÖ Respuesta: Array de clientes que coinciden"
      },
      "response": []
    },
    {
      "name": "7Ô∏è‚É£ Listar Clientes por Ciudad",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/clientes/ciudad/Medell√≠n",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["clientes", "ciudad", "Medell√≠n"]
        },
        "description": "**Lista todos los clientes de una ciudad espec√≠fica.**\n\nüèôÔ∏è Cambia `Medell√≠n` en la URL por la ciudad que quieres filtrar.\n\n‚úÖ La b√∫squeda es case-insensitive (medellin = Medell√≠n)\n‚úÖ Respuesta: Array de clientes de esa ciudad"
      },
      "response": []
    },
    {
      "name": "8Ô∏è‚É£ Actualizar Cliente",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"telefono\": \"+57 300 999 8888\",\n  \"direccion\": \"Carrera 70 #52-20, Laureles\"\n}"
        },
        "url": {
          "raw": "http://localhost:8000/clientes/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["clientes", "1"]
        },
        "description": "**Actualiza un cliente existente.**\n\nüî¢ Cambia el `1` en la URL por el ID del cliente a actualizar.\n\nüìù Puedes enviar solo los campos que quieres cambiar:\n- Si solo quieres cambiar el tel√©fono, env√≠a solo `{\"telefono\": \"+57...\"}`\n- Los dem√°s campos quedan igual\n\n‚ö†Ô∏è IMPORTANTE:\n- Si cambias el email, debe seguir siendo √∫nico\n- Si cambias el documento, debe seguir siendo √∫nico\n\n‚úÖ Respuesta exitosa: HTTP 200 con el cliente actualizado\n‚ùå Errores:\n- 404: Cliente no encontrado\n- 400: Email o documento duplicado\n- 422: Email inv√°lido"
      },
      "response": []
    },
    {
      "name": "9Ô∏è‚É£ Eliminar Cliente (L√≥gico)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/clientes/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["clientes", "1"]
        },
        "description": "**Elimina un cliente (eliminaci√≥n L√ìGICA).**\n\n‚ö†Ô∏è IMPORTANTE: El cliente NO se borra de la base de datos.\nSolo se marca como `activo = false`.\n\nüî¢ Cambia el `1` en la URL por el ID del cliente a eliminar.\n\n‚úÖ Respuesta exitosa: HTTP 200 con mensaje de confirmaci√≥n\n‚ùå Errores:\n- 404: Cliente no encontrado\n- 400: Cliente ya estaba eliminado"
      },
      "response": []
    }
  ]
}
